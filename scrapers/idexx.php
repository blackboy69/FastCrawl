<?
include_once "config.inc";
include_once "search_engine_yahoo_local.php";

class idexx extends baseScrape
{
    public static $_this=null;
	
   public function runLoader()
   {
		$type = get_class();		
		$this->noProxy=false;
		//$this->proxy = "localhost:8888";
		$this->allowRedirects = false;
		$this->threads=1;
		$this->debug=false;

		db::query("DROP TABLE $type");	
		db::query("UPDATE raw_data set parsed = 0 where type='$type' and parsed = 1 ");

		for ($i=1;$i<135;$i++)
		{
			$urls[] = "http://community.idexx.com/cornerstone/search_advanced.php?cat_selected=1&task=main&sort=user_dateupdated%20DESC&user_online=0&user_withphoto=0&p=$i";
		}
		$this->loadUrlsByArray($urls,true);
		$this->login();
/*
		$sql = "select *
	from idexx where id not in 
	(3070,2764,2103,2104,2102,1701,1700,1698,1695,1696,1699,1690,1685,1703,1697,1689,1677,1680,1678,1679,1673,1666,1671,1667,1672,1668,1670,1692,1662,1665,1658,1661,1653,1649,1650,1647,1652,1638,1635,1627,1631,1629,1616,1630,1618,1615,1604,1598,1605,1597,1595,1600,1590,1579,1586,1602,1580,1576,1567,1581,1573,1565,1570,1594,1559,1563,1561,1556,1553,1564,1552,1551,1549,1550,1537,1542,1535,1522,1541,1521,1513,1526,1505,1519,1503,1502,1523,1504,1500,1494,1499,1497,1509,1495,1496,1488,1491,1490,1482,1483,1480,1472,1464,1469,1462,1465,1455,1456,1459,1451,1449,1457,1446,1460,1473,1444,1439,1435,1438,1434,1428,1436,1429,1413,1414,1424,1415,1409,1408,1407,1399,1412,1410,1403,1400,1395,1397,1396,1406,1389,1393,1388,1390,1382,1380,1385,1377,1374,1387,1378,1370,1369,1362,1357,1356,1358,1353,1386,1360,1342,1354,1338,1343,1337,1332,1325,1334,1330,1324,1327,1316,1313,1314,1319,1326,1311,1304,1305,1298,1297,1307,1321,1295,1300,1287,1290,1289,1277,1269,1268,1280,1271,1270,1267,1260,1258,1257,1255,1246,1249,1233,1234,1232,1238,1240,1256,1231,1221,1224,1215,1216,1212,1218,1230,1204,1213,1200,1205,1206,1193,1202,1191,1182,1176,1171,1177,1164,1172,1173,1162,1156,1160,1155,1166,1150,1159,1147,1152,1141,1154,1143,1135,1144,1149,1132,1139,1123,1126,1127,1131,1137,1116,1117,1113,1109,1106,1105,1118,1112,1107,1094,1111,1092,1098,1088,1096,1093,1101,1090,1087,1074,1071,1079,1078,1082,1073,1068,1085,1077,1066,1059,1062,1052,1058,1056,1060,1040,1044,1042,1043,1033,1035,1027,1030,1022,1016,1017,1010,1013,1006,1005,999,1002,995,996,994,987,982,981,973,977,976,975,962,967,969,958,970,957,943,955,942,949,946,939,914,909,911,905,904,893,903,891,889,885,890,886,881,884,883,868,872,867,877,863,858,875,852,856,854,847,846,855,850,844,849,841,839,834,845,842,837,832,831,822,825,817,828,811,818,820,807,809,799,810,794,808,806,782,788,801,786,787,784,780,789,771,773,781,776,767,762,758,759,755,756,754,750,751,745,747,744,737,735,743,730,733,723,732,721,716,720,714,718,727,706,709,704,700,713,701,694,685,699,703,679,682,673,680,669,668,664,667,671,666,662,659,651,650,656,660,655,643,647,640,649,633,626,628,618,617,621,613,612,635,607,622,611,605,610,603,597,595,593,599,609,606,588,598,589,592,596,587,581,576,565,571,564,570,559,561,551,562,557,555,549,547,542,550,534,539,532,535,529,538,527,526,520,519,528,517,512,504,506,505,510,498,507,500,499,496,515,503,493,492,486,481,490,478,477,482,466,474,471,472,470,455,467,453,458,446,445,452,442,448,443,435,433,436,440,362,354,353,361,342,340,335,339,338,323,324,124,118,119,116,115,117,109,105,100,97,102,91,89,77,72,61,64,65,54,52,41,51,42,40,36,38,26,24,44,39,16,30,15,17,2,27,56,23,7,20,18,29,37,43,5,53,35,63,60,81,108,71,107,86,106,95,59,111,123,131,168,134,148,146,166,149,157,154,165,138,132,136,120,125,127,137,192,185,194,174,188,222,214,171,176,170,212,224,175,195,189,186,219,218,215,201,202,209,203,196,276,242,274,280,269,244,268,237,279,241,243,273,260,232,325,286,293,295,312,300,285,328,303,322,376,374,377,368,392,383,373,360,365,370,385,390,407,417,409,399,423,405,393,395,418,432,412,437,411,428,415,404,473,495,463,494,464,469,491,454,502,457,460,451,489,465,456,484,558,525,560,541,554,545,546,533,568,575,614,602,580,573,572,585,594,590,652,661,620,646,642,629,712,705,697,719,698,695,708,692,741,778,770,729,749,765,777,821,795,827,792,824,814,819,785,836,805,874,848,894,896,873,880,860,934,919,936,935,910,921,938,947,929,923,900,906,918,945,925,950,902,979,984,1000,963,1008,966,978,974,1004,972,983,1046,1032,1037,1021,1055,1019,1054,1047,1023,1014,1053,1015,1083,1114,1065,1102,1095,1100,1069,1097,1067,1104,1129,1121,1169,1140,1161,1165,1122,1167,1138,1174,1175,1157,1229,1199,1201,1207,1186,1181,1226,1187,1196,1209,1185,1208,1220,1217,1250,1261,1273,1252,1274,1245,1285,1263,1278,1248,1265,1247,1264,1288,1282,1329,1333,1296,1339,1308,1312,1310,1322,1299,1350,1391,1346,1392,1365,1376,1383,1355,1359,1345,1375,1366,1381,1352,1401,1420,1430,1426,1445,1404,1440,1411,1423,1477,1489,1467,1492,1498,1506,1511,1493,1471,1479,1481,1515,1546,1558,1529,1517,1516,1562,1574,1593,1587,1592,1599,1612,1611,1577,1569,1621,1571,1624,1620,1613,1601,1623,1614,1660,1626,1641,1675,1637,1644,1663,1632,1634,1657,1733,1732,1736,1720,1718,1723,1727,1731,1725,1717,1707,1683,1721,1730,1734,1763,1745,1771,1753,1744,1757,1750,1758,1761,1786,1789,1790,1778,1787,1776,1737,1812,1818,1830,1817,1843,1841,1826,1828,1811,1810,1820,1823,1847,1794,1816,1836,1845,1795,1793,1876,1880,1890,1872,1863,1897,1869,1852,1870,1859,1861,1892,1865,1893,1891,1883,1948,1951,1933,1939,1940,1934,1916,1918,1944,1906,1921,1908,1953,1931,1913,1926,1907,1958,1937,1990,1975,1987,2013,1961,1985,1981,2004,1971,1996,1973,2014,2006,1969,1986,1963,1968,1994,1979,1970,2015,2008,1967,2055,2017,2061,2037,2064,2068,2059,2056,2026,2070,2057,2034,2072,2062,2071,2025,2023,2040,2074,2085,2088,2093,2086,2100,2084,2120,2105,2090,2092,2101,2127,2125,2080,2121,2169,2156,2132,2137,2184,2145,2144,2157,2161,2167,2133,2165,2150,2200,2213,2199,2232,2185,2193,2223,2190,2195,2240,2209,2192,2189,2230,2194,2201,2233,2227,2231,2229,2219,2238,2281,2275,2271,2265,2264,2293,2280,2260,2292,2269,2276,2274,2242,2288,2245,2258,2244,2251,2263,2268,2334,2322,2316,2321,2312,2345,2335,2330,2298,2328,2323,2310,2324,2304,2319,2349,2308,2343,2318,2300,2326,2347,2307,2342,2313,2317,2382,2381,2362,2377,2369,2356,2405,2392,2359,2401,2378,2395,2363,2399,2374,2364,2391,2370,2368,2389,2388,2384,2406,2354,2414,2416,2418,2454,2422,2450,2455,2442,2434,2435,2421,2410,2441,2462,2433,2409,2459,2426,2431,2439,2443,2494,2498,2487,2513,2508,2517,2495,2509,2499,2510,2467,2486,2468,2496,2475,2500,2518,2503,2466,2469,2516,2493,2492,2505,2514,2545,2546,2556,2571,2536,2528,2573,2525,2568,2521,2567,2535,2561,2524,2547,2532,2554,2552,2570,2522,2548,2575,2549,2550,2527,2565,2574,2616,2623,2618,2608,2607,2578,2615,2580,2582,2599,2613,2577,2592,2583,2595,2600,2601,2596,2631,2598,2604,2611,2619,2647,2684,2644,2654,2685,2676,2641,2653,2636,2649,2650,2638,2669,2656,2721,2720,2719,2724,2731,2696,2708,2705,2689,2716,2703,2702,2706,2697,2692,2701,2740,2728,2744,2714,2737,2712,2700,2736,2751,2790,2776,2752,2748,2769,2767,2777,2789,2763,2779,2761,2778,2792,2783,2782,2745,2766,2758,2855,2856,2848,2830,2814,2803,2804,2850,2832,2826,2825,2835,2852,2840,2813,2810,2812,2843,2846,2847,2829,2811,2836,2839,2842,2875,2869,2880,2908,2859,2881,2901,2894,2883,2858,2867,2892,2907,2897,2898,2871,2903,2887,2886,2967,2962,2916,2965,2917,2926,2948,2952,2923,2938,2966,2946,2941,2937,2924,2920,2942,2939,2958,2949,3009,2992,2975,3011,3020,3018,2999,3015,3003,3005,2978,3022,2987,2991,2998,3006,2986,3007,2994,2996,2980,2982,3016,2988,3028,3078,3061,3076,3053,3032,3055,3034,3069,3045,3050,3035,3054,3059,3087,3088,2520,19,359,829,2021,1584,1752,220,579,1163,1195,2045,2660,1684,1686,1879,2747,2820,1710,2067,556,2477,501,772,1398,1803,2483,631,625,2066,238,1606,2807,2818,2658,2974,129,1779,2261,2888,2448,1133,1762,1784,147,990,1347,1834,1943,2329,2340,1510,329,1946,2278,9,2794,1980,2095,98,1871,1520,2774,225,321,1331,2640,2225,2822,518,2868)";

		

		$results = db::query($sql);
		
		$urls = array();
		
		foreach($results as $row)
		{
			// now load the urls for yahoo placefinder...
			$y = new search_engine_yahoo_local();

			$state = isset($data['STATE']) ? ",". $data['STATE'] : "";
			$yahooUrl = $y->url($data['BUSINESS_NAME'],$data['CITY'].$state);
			
			$id = $data['id'];
			$urls[] = $yahooUrl."&idexx_id=$id";
		}
		$this->loadUrlsByArray($urls);
*/
		
	}

	static function loadCallBack($url,$html)
	{
		static $requests = 0; // swap proxies after 1000 requests
		if (stripos($html,"limit exceeded")!==false || $requests++ > 1000)
		{
			$thiz = self::getInstance();		
			$requests=0;			
			Log::info("Limit Exeeded");
			sleep(60);
			$thiz->login();
//			$thiz->switchProxy($url);
		}
		else
		{
			baseScrape::loadCallBack($url,$html);
		}
	}

	public function login()
	{
		$url= "http://community.idexx.com/cornerstone/login.php";
		$email = urlencode("byronwhitlock@gmail.com");
		$password = "puppies01";
		
		$html = $this->Post($url,"email=$email&password=$password&task=dologin&return_url=user_home.php");
			
	}

	public static function parse($url,$html)
	{
		$query = array();
		$type = get_class();		
		$thiz = self::getInstance();		
		$host = parse_url($url,PHP_URL_HOST);

		parse_str(parse_url($url,PHP_URL_QUERY),$query); // address and zip	
		
		$x = new Xpath($html);

		if (preg_match("/search_advanced.php/",$url))
		{
			$urls= array();
			foreach ($x->query("//div[@class='browse_result']//a") as $node)
			{
				$urls[] = self::relative2absolute($url, $node->getAttribute('href'));
			}
			$thiz->loadUrlsByArray($urls);
		}
		else if (preg_match("/profile.php/",$url))
		{
			$ap = new Address_Parser();
			$data = array();

			try 
			{				
				foreach($x->query("//div[@id='profile_profile']//tr") as $node)
				{

					$key = "";
					list($key,$value) = explode(':', $node->textContent);
					$key = trim(str_replace(":","",$key));
					$value=trim($value);

					$data[$key] = $value;
					
				}			
			//	if (isset($data['FIRST_NAME']) || isset($data['BUSINESS_NAME']))

					$data['SourceUrl'] = $url;
					$data = db::normalize($data);
					echo ".";
					$id =db::store($type,$data,array('SourceUrl'));
			
					// now load the urls for yahoo placefinder...
					$y = new search_engine_yahoo_local();
					print_r($data);
					$yahooUrl = $y->url($data['BUSINESS_NAME'],$data['CITY'].", ".@$data['STATE']);
					$toLoad = $yahooUrl."&idexx_id=$id";
//					log::info("Loading $toLoad" );
					$thiz->loadUrl($toLoad);
	
			}
			catch(Exception $e)
			{
				log::error ("Cannot store ".$data['NAME']);
				log::error($e);
				exit;
			}		

		}
		else if (preg_match("/yahoo/",$url))
		{
			// now load the urls for yahoo placefinder...
			$y = new search_engine_yahoo_local();
			$datas = $y->parse($html);
			
			if (empty($datas))
			{
			//	log::error("Empty data");
				return;
			}

			
			if (is_array($datas[0]))
				$data = $datas[0];
			else
				$data = $datas;

			$data['idexx_id']=$query['idexx_id'];
			//log::info($url);
			echo "+";


			db::store($type."_geocode",$data,array('Url'));
			

		}
		else 
		{
			log::error("Unknown Url: $url");
		}		
	}



}

//db::query("UPDATE  raw_data set parsed=0 where type='idexx' and parsed=1 ");
/*db::query("DROP TABLE idexx ");
*/
$r= new idexx();
$r = new idexx();
$r->parseCommandLine();

