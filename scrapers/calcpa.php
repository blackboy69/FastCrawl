<?
include_once "config.inc";
include_once "search_engine_yahoo_local.php";

class calcpa extends baseScrape
{
    public static $_this=null;
	

   public function runLoader()
   {
		$type = get_class();		

		//$this->maxRetries = 100;
		//$this->timeout = 15;
		$this->useCookies=true;
		$this->allowRedirects = true;
		$this->debug=false;
//		$this->threads=2;
//	$this->debug=true;
	//log::error_level(ERROR_DEBUG_VERBOSE);
		
		/*
	   db::query("
		UPDATE load_queue SET processing = 1 WHERE url IN (SELECT url FROM raw_data)		 
			 ");

		*/
		// cananda top 100 cities by population
	//	db::query("DELETE FROM raw_data where type = '$type' ");
//		db::query("DELETE FROM load_queue where type='$type'");
		//db::query("UPDATE raw_data SET parsed = 0 where parsed = 1  AND type = '$type' ");
		//db::query("DROP TABLE $type ");
		//db::query("UPDATE load_queue SET processing = 1 where type = '$type' ");

		$webRequests= array();
//		$this->noProxy= false;
	//	$this->proxy = "localhost:8888";

		$html = $this->get("http://www.calcpa.org/Public/Referral/findcpa.aspx");
		$page = new HtmlParser($html);		
		
	//	$counties = array('ALA', 'BAK', 'BAY', 'BRA', 'BRE', 'BRO', 'CAL', 'CHA', 'CIT', 'CLA', 'CLL', 'CLU', 'DES', 'DIX', 'DUV', 'ESC', 'FLA', 'FRA', 'GAD', 'GIL', 'GLA', 'GUL', 'HAM', 'HAR', 'HEN', 'HER', 'HIG', 'HIL', 'HOL', 'IND', 'JAC', 'JEF', 'LAF', 'LAK', 'LEE', 'LEO', 'LEV', 'LIB', 'MAD', 'MAN', 'MRI', 'MRT', 'DAD', 'MON', 'NAS', 'OKA', 'OKE', 'ORA', 'OSC', 'PAL', 'PAS', 'PIN', 'POL', 'PUT', 'SAN', 'SAR', 'SEM', 'STJ', 'STL', 'SUM', 'SUW', 'TAY', 'UNI', 'VOL', 'WAK', 'WAL', 'WAS');
//		foreach($counties as $county)
		{
			$data = "__EVENTTARGET=&__EVENTARGUMENT=&__VIEWSTATE=%2FwEPDwUKMTMzNTA4ODUwMg9kFgJmD2QWEAIBD2QWAgICD2QWAgICD2QWAmYPFCsAAg8FxQFDO0M6QnJ5Y2VXZWJHcm91cC5XZWIuVUkuV2ViQ29udHJvbHMuRHluYW1pY0NvbnRyb2xzUGxhY2Vob2xkZXIsIEJyeWNlV2ViR3JvdXAuV2ViLlVJLldlYkNvbnRyb2xzLkR5bmFtaWNDb250cm9sc1BsYWNlaG9sZGVyLCBWZXJzaW9uPTIuMS4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MzBkMjNmMTA4NWRmM2U3MjtvRENQSBYAZGQCAw9kFgICAg9kFgJmDxQrAAIPBcUBQztDOkJyeWNlV2ViR3JvdXAuV2ViLlVJLldlYkNvbnRyb2xzLkR5bmFtaWNDb250cm9sc1BsYWNlaG9sZGVyLCBCcnljZVdlYkdyb3VwLldlYi5VSS5XZWJDb250cm9scy5EeW5hbWljQ29udHJvbHNQbGFjZWhvbGRlciwgVmVyc2lvbj0yLjEuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTMwZDIzZjEwODVkZjNlNzI7b0RDUEgWAGQWAmYPZBYCAgEPZBYCZg9kFgJmDxQrAAIPBcUBQztDOkJyeWNlV2ViR3JvdXAuV2ViLlVJLldlYkNvbnRyb2xzLkR5bmFtaWNDb250cm9sc1BsYWNlaG9sZGVyLCBCcnljZVdlYkdyb3VwLldlYi5VSS5XZWJDb250cm9scy5EeW5hbWljQ29udHJvbHNQbGFjZWhvbGRlciwgVmVyc2lvbj0yLjEuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTMwZDIzZjEwODVkZjNlNzI7b0RDUEgWAGQWAmYPZBYCZg9kFgRmD2QWBAIDDxYCHglpbm5lcmh0bWxlZAIFDxYCHwAF5gc8c2NyaXB0Pg0KdmFyIGN0bDAwX1BhbmVsU2VjdGlvbkhlYWRfb1BhbmVsXzIzODc5XzMzXzBfY3RsMDBfY29tMF9jdGwwMF9jdGwwMF9jb20wX29ianMgPSBuZXcgQXJyYXkoKTsNCg0KY3RsMDBfUGFuZWxTZWN0aW9uSGVhZF9vUGFuZWxfMjM4NzlfMzNfMF9jdGwwMF9jb20wX2N0bDAwX2N0bDAwX2NvbTBfQWQgPSBuZXcgQWRSb3RhdG9yKCJjdGwwMF9QYW5lbFNlY3Rpb25IZWFkX29QYW5lbF8yMzg3OV8zM18wX2N0bDAwX2NvbTBfY3RsMDBfY3RsMDBfY29tMCIsIGN0bDAwX1BhbmVsU2VjdGlvbkhlYWRfb1BhbmVsXzIzODc5XzMzXzBfY3RsMDBfY29tMF9jdGwwMF9jdGwwMF9jb20wX29ianMpOw0KY3RsMDBfUGFuZWxTZWN0aW9uSGVhZF9vUGFuZWxfMjM4NzlfMzNfMF9jdGwwMF9jb20wX2N0bDAwX2N0bDAwX2NvbTBfQWQuTmF2aWdhdGlvbiA9IGZhbHNlOw0KY3RsMDBfUGFuZWxTZWN0aW9uSGVhZF9vUGFuZWxfMjM4NzlfMzNfMF9jdGwwMF9jb20wX2N0bDAwX2N0bDAwX2NvbTBfQWQucmFuZG9tID0gZmFsc2U7DQpjdGwwMF9QYW5lbFNlY3Rpb25IZWFkX29QYW5lbF8yMzg3OV8zM18wX2N0bDAwX2NvbTBfY3RsMDBfY3RsMDBfY29tMF9BZC5yb3RhdGUgPSB0cnVlOw0KY3RsMDBfUGFuZWxTZWN0aW9uSGVhZF9vUGFuZWxfMjM4NzlfMzNfMF9jdGwwMF9jb20wX2N0bDAwX2N0bDAwX2NvbTBfQWQudGV4dFByZXZpb3VzID0gIjwgcHJldmlvdXMiOw0KY3RsMDBfUGFuZWxTZWN0aW9uSGVhZF9vUGFuZWxfMjM4NzlfMzNfMF9jdGwwMF9jb20wX2N0bDAwX2N0bDAwX2NvbTBfQWQudGV4dE5leHQgPSAibmV4dCA%2BIjsNCmN0bDAwX1BhbmVsU2VjdGlvbkhlYWRfb1BhbmVsXzIzODc5XzMzXzBfY3RsMDBfY29tMF9jdGwwMF9jdGwwMF9jb20wX0FkLnNob3dEb3RzID0gZmFsc2U7DQpjdGwwMF9QYW5lbFNlY3Rpb25IZWFkX29QYW5lbF8yMzg3OV8zM18wX2N0bDAwX2NvbTBfY3RsMDBfY3RsMDBfY29tMF9BZC5pbml0aWFsaXplKCk7DQo8L3NjcmlwdD4NCmQCAg9kFgICAw8PFgQeD0NvbW1hbmRBcmd1bWVudGQeB1Zpc2libGVoZGQCBw9kFgICAg9kFgJmDxQrAAIPBcUBQztDOkJyeWNlV2ViR3JvdXAuV2ViLlVJLldlYkNvbnRyb2xzLkR5bmFtaWNDb250cm9sc1BsYWNlaG9sZGVyLCBCcnljZVdlYkdyb3VwLldlYi5VSS5XZWJDb250cm9scy5EeW5hbWljQ29udHJvbHNQbGFjZWhvbGRlciwgVmVyc2lvbj0yLjEuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTMwZDIzZjEwODVkZjNlNzI7b0RDUEgWAGQWAmYPZBYCAgEPZBYCZg9kFgJmDxQrAAIPBcUBQztDOkJyeWNlV2ViR3JvdXAuV2ViLlVJLldlYkNvbnRyb2xzLkR5bmFtaWNDb250cm9sc1BsYWNlaG9sZGVyLCBCcnljZVdlYkdyb3VwLldlYi5VSS5XZWJDb250cm9scy5EeW5hbWljQ29udHJvbHNQbGFjZWhvbGRlciwgVmVyc2lvbj0yLjEuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTMwZDIzZjEwODVkZjNlNzI7b0RDUEgWAGRkAg0PZBYCAgIPZBYEZg8WAh8CaGQCAg8WBB8ABZEFDQo8ZGl2IGNsYXNzPSJhcnJvd2xpc3RtZW51Ij4NCjxpbnB1dCB0eXBlPSJoaWRkZW4iIGNsYXNzPSJ0aGlzUGFnZUlkIiB2YWx1ZT0iMjM4NzkiIC8%2BPGlucHV0IHR5cGU9ImhpZGRlbiIgY2xhc3M9InRoaXNQYXRoSWQiIHZhbHVlPSI7MjM4Nzk7IiAvPg0KPC9kaXY%2BDQoNCjxzY3JpcHQ%2BDQogICAgDQovLzsyMzg3OTsNCmRkYWNjb3JkaW9uLmluaXQoew0KCWhlYWRlcmNsYXNzOiAiZXhwYW5kYWJsZSIsDQoJY29udGVudGNsYXNzOiAiY2F0ZWdvcnlpdGVtcyIsDQoJcmV2ZWFsdHlwZTogIm1vdXNlb3ZlciIsDQoJbW91c2VvdmVyZGVsYXk6IDUwMCwNCgljb2xsYXBzZXByZXY6IHRydWUsDQoJZGVmYXVsdGV4cGFuZGVkOiBbLTFdLA0KCW9uZW11c3RvcGVuOiBmYWxzZSwNCglhbmltYXRlZGVmYXVsdDogZmFsc2UsDQoJcGVyc2lzdHN0YXRlOiBmYWxzZSwNCgl0b2dnbGVjbGFzczogWyIiLCAib3BlbmhlYWRlciJdLA0KCXRvZ2dsZWh0bWw6IFsicHJlZml4IiwgIiIsICIiXSwNCglhbmltYXRlc3BlZWQ6ICJmYXN0IiwNCglvbmluaXQ6ZnVuY3Rpb24oaGVhZGVycywgZXhwYW5kZWRpbmRpY2VzKXsgfSwNCglvbm9wZW5jbG9zZTpmdW5jdGlvbihoZWFkZXIsIGluZGV4LCBzdGF0ZSwgaXN1c2VyYWN0aXZhdGVkKXsgfQ0KfSk7DQoNCjwvc2NyaXB0Pg0KHwJnZAIPD2QWAgICD2QWAmYPFCsAAg8FxQFDO0M6QnJ5Y2VXZWJHcm91cC5XZWIuVUkuV2ViQ29udHJvbHMuRHluYW1pY0NvbnRyb2xzUGxhY2Vob2xkZXIsIEJyeWNlV2ViR3JvdXAuV2ViLlVJLldlYkNvbnRyb2xzLkR5bmFtaWNDb250cm9sc1BsYWNlaG9sZGVyLCBWZXJzaW9uPTIuMS4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MzBkMjNmMTA4NWRmM2U3MjtvRENQSBYAZGQCEQ9kFgICAg9kFgJmDxQrAAIPBcUBQztDOkJyeWNlV2ViR3JvdXAuV2ViLlVJLldlYkNvbnRyb2xzLkR5bmFtaWNDb250cm9sc1BsYWNlaG9sZGVyLCBCcnljZVdlYkdyb3VwLldlYi5VSS5XZWJDb250cm9scy5EeW5hbWljQ29udHJvbHNQbGFjZWhvbGRlciwgVmVyc2lvbj0yLjEuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTMwZDIzZjEwODVkZjNlNzI7b0RDUEgWAGRkAhMPZBYCAgQPZBYCAh8PFgIeC18hSXRlbUNvdW50Ag4WHGYPZBYGAgEPDxYCHgRUZXh0BRJFc3RhdGVzIGFuZCBUcnVzdHNkZAIDDxAPFgIeC18hRGF0YUJvdW5kZ2QPFghmAgECAgIDAgQCBQIGAgcWCBAFA0FsbAUBIGcQBRtDaGFyaXRhYmxlIFJlbWFpbmRlciBUcnVzdHMFG0NoYXJpdGFibGUgUmVtYWluZGVyIFRydXN0c2cQBQ5UcnVzdCBTZXJ2aWNlcwUOVHJ1c3QgU2VydmljZXNnEAUdVHJ1c3RzIC0gQ2hhcml0YWJsZSBSZW1haW5kZXIFHVRydXN0cyAtIENoYXJpdGFibGUgUmVtYWluZGVyZxAFI1RydXN0cyAtIElycmV2b2NhYmxlIExpZmUgSW5zdXJhbmNlBSNUcnVzdHMgLSBJcnJldm9jYWJsZSBMaWZlIEluc3VyYW5jZWcQBRZUcnVzdHMgLSBMaXZpbmcgVHJ1c3RzBRZUcnVzdHMgLSBMaXZpbmcgVHJ1c3RzZxAFIlRydXN0cyAtIE9mZnNob3JlIEFzc2V0IFByb3RlY3Rpb24FIlRydXN0cyAtIE9mZnNob3JlIEFzc2V0IFByb3RlY3Rpb25nEAUVVHJ1c3RzIC0gUmFiYmkgVHJ1c3RzBRVUcnVzdHMgLSBSYWJiaSBUcnVzdHNnZGQCBQ8PFgIfBAUkNkUyNDRFRTYtQkYxNC00RjFBLUI0RUQtMUY0MEM0RTQwQUYwZGQCAQ9kFgYCAQ8PFgIfBAUdT3RoZXIgQ291bnRyaWVzIG9mIEV4cGVyaWVuY2VkZAIDDxAPFgIfBWdkDxbsAWYCAQICAgMCBAIFAgYCBwIIAgkCCgILAgwCDQIOAg8CEAIRAhICEwIUAhUCFgIXAhgCGQIaAhsCHAIdAh4CHwIgAiECIgIjAiQCJQImAicCKAIpAioCKwIsAi0CLgIvAjACMQIyAjMCNAI1AjYCNwI4AjkCOgI7AjwCPQI%2BAj8CQAJBAkICQwJEAkUCRgJHAkgCSQJKAksCTAJNAk4CTwJQAlECUgJTAlQCVQJWAlcCWAJZAloCWwJcAl0CXgJfAmACYQJiAmMCZAJlAmYCZwJoAmkCagJrAmwCbQJuAm8CcAJxAnICcwJ0AnUCdgJ3AngCeQJ6AnsCfAJ9An4CfwKAAQKBAQKCAQKDAQKEAQKFAQKGAQKHAQKIAQKJAQKKAQKLAQKMAQKNAQKOAQKPAQKQAQKRAQKSAQKTAQKUAQKVAQKWAQKXAQKYAQKZAQKaAQKbAQKcAQKdAQKeAQKfAQKgAQKhAQKiAQKjAQKkAQKlAQKmAQKnAQKoAQKpAQKqAQKrAQKsAQKtAQKuAQKvAQKwAQKxAQKyAQKzAQK0AQK1AQK2AQK3AQK4AQK5AQK6AQK7AQK8AQK9AQK%2BAQK%%2FFkAQBQNBbGwFASBnEAULQWR2ZXJ0aXNpbmcFC0FkdmVydGlzaW5nZxAFM0FncmljdWx0dXJlIC0gRmFybWVycy9Db29wZXJhdGl2ZXMvUmVsYXRlZCBTZXJ2aWNlcwUzQWdyaWN1bHR1cmUgLSBGYXJtZXJzL0Nvb3BlcmF0aXZlcy9SZWxhdGVkIFNlcnZpY2VzZxAFCEFpcmxpbmVzBQhBaXJsaW5lc2cQBRBBdXRvIERlYWxlcnNoaXBzBRBBdXRvIERlYWxlcnNoaXBzZxAFDUJpb3RlY2hub2xvZ3kFDUJpb3RlY2hub2xvZ3lnEAUTQnJva2VycyBhbmQgRGVhbGVycwUTQnJva2VycyBhbmQgRGVhbGVyc2cQBQpDZW1ldGVyaWVzBQpDZW1ldGVyaWVzZxAFBkNsZXJneQUGQ2xlcmd5ZxAFFUNvbGxlZ2VzL1VuaXZlcnNpdGllcwUVQ29sbGVnZXMvVW5pdmVyc2l0aWVzZxAFHENvbXB1dGVyIFNvZnR3YXJlIERldmVsb3BlcnMFHENvbXB1dGVyIFNvZnR3YXJlIERldmVsb3BlcnNnEAUYQ29uc3RydWN0aW9uIENvbnRyYWN0b3JzBRhDb25zdHJ1Y3Rpb24gQ29udHJhY3RvcnNnEAUJQ1BBIEZpcm1zBQlDUEEgRmlybXNnEAUNQ3JlZGl0IFVuaW9ucwUNQ3JlZGl0IFVuaW9uc2cQBRZFbXBsb3llZSBCZW5lZml0IFBsYW5zBRZFbXBsb3llZSBCZW5lZml0IFBsYW5zZxAFFUVudGVydGFpbmVycy9BdGhsZXRlcwUVRW50ZXJ0YWluZXJzL0F0aGxldGVzZxAFLkVudmlyb25tZW50YWwgUmVtZWRpYXRpb24gYW5kIFJlbGF0ZWQgU2VydmljZXMFLkVudmlyb25tZW50YWwgUmVtZWRpYXRpb24gYW5kIFJlbGF0ZWQgU2VydmljZXNnEAUQRXNjcm93IENvbXBhbmllcwUQRXNjcm93IENvbXBhbmllc2cQBRVFeHRyYWN0aXZlIEluZHVzdHJpZXMFFUV4dHJhY3RpdmUgSW5kdXN0cmllc2cQBRNGaWxtIGFuZCBUZWxldmlzaW9uBRNGaWxtIGFuZCBUZWxldmlzaW9uZxAFFkZpbmFuY2lhbCBJbnN0aXR1dGlvbnMFFkZpbmFuY2lhbCBJbnN0aXR1dGlvbnNnEAUeRmluYW5jaWFsIE91dHNvdXJjaW5nIFNlcnZpY2VzBR5GaW5hbmNpYWwgT3V0c291cmNpbmcgU2VydmljZXNnEAUURmlzaGluZyAoQ29tbWVyY2lhbCkFFEZpc2hpbmcgKENvbW1lcmNpYWwpZxAFDEZvb2QgU2VydmljZQUMRm9vZCBTZXJ2aWNlZxAFHkZvcmVpZ24gQ29tcGFuaWVzIGFuZCBDb21tZXJjZQUeRm9yZWlnbiBDb21wYW5pZXMgYW5kIENvbW1lcmNlZxAFCEZvcmVzdHJ5BQhGb3Jlc3RyeWcQBQpGcmFuY2hpc2VzBQpGcmFuY2hpc2VzZxAFDkdhbWluZy9DYXNpbm9zBQ5HYW1pbmcvQ2FzaW5vc2cQBQpHb3Zlcm5tZW50BQpHb3Zlcm5tZW50ZxAFDkdyb2NlcnkgU3RvcmVzBQ5Hcm9jZXJ5IFN0b3Jlc2cQBQpIZWFsdGhjYXJlBQpIZWFsdGhjYXJlZxAFDUhvdGVscy9Nb3RlbHMFDUhvdGVscy9Nb3RlbHNnEAUNSW1wb3J0L0V4cG9ydAUNSW1wb3J0L0V4cG9ydGcQBQlJbnN1cmFuY2UFCUluc3VyYW5jZWcQBRJJbnRlcm5ldCBSZXRhaWxlcnMFEkludGVybmV0IFJldGFpbGVyc2cQBSFJbnZlc3RtZW50IENvbXBhbmllcy9NdXR1YWwgRnVuZHMFIUludmVzdG1lbnQgQ29tcGFuaWVzL011dHVhbCBGdW5kc2cQBQlMYXcgRmlybXMFCUxhdyBGaXJtc2cQBRFMZWFzaW5nIENvbXBhbmllcwURTGVhc2luZyBDb21wYW5pZXNnEAUNTWFudWZhY3R1cmluZwUNTWFudWZhY3R1cmluZ2cQBRJNaWxpdGFyeSBQZXJzb25uZWwFEk1pbGl0YXJ5IFBlcnNvbm5lbGcQBRFNb2JpbGUgSG9tZSBQYXJrcwURTW9iaWxlIEhvbWUgUGFya3NnEAUQTW9ydGdhZ2UgQnJva2VycwUQTW9ydGdhZ2UgQnJva2Vyc2cQBQ5NdXNpYyBJbmR1c3RyeQUOTXVzaWMgSW5kdXN0cnlnEAUJTm9ucHJvZml0BQlOb25wcm9maXRnEAUUUGFzc2VuZ2VyIFNoaXAgTGluZXMFFFBhc3NlbmdlciBTaGlwIExpbmVzZxAFD1ByaXZhdGUgU2Nob29scwUPUHJpdmF0ZSBTY2hvb2xzZxAFClB1Ymxpc2hpbmcFClB1Ymxpc2hpbmdnEAUUUmFkaW8gYW5kIFRlbGV2aXNpb24FFFJhZGlvIGFuZCBUZWxldmlzaW9uZxAFC1JlYWwgRXN0YXRlBQtSZWFsIEVzdGF0ZWcQBSVSZWFsIEVzdGF0ZSBJbnZlc3RtZW50IFRydXN0cyAoUkVJVFMpBSVSZWFsIEVzdGF0ZSBJbnZlc3RtZW50IFRydXN0cyAoUkVJVFMpZxAFHlJlZ2lzdGVyZWQgSW52ZXN0bWVudCBBZHZpc29ycwUeUmVnaXN0ZXJlZCBJbnZlc3RtZW50IEFkdmlzb3JzZxAFC1Jlc3RhdXJhbnRzBQtSZXN0YXVyYW50c2cQBQlSZXRhaWxlcnMFCVJldGFpbGVyc2cQBRZSZXRpcmVtZW50IENvbW11bml0aWVzBRZSZXRpcmVtZW50IENvbW11bml0aWVzZxAFFVNlcnZpY2UgUHJvZmVzc2lvbmFscwUVU2VydmljZSBQcm9mZXNzaW9uYWxzZxAFLFNoaXBwaW5nL0ZyZWlnaHQgRm9yd2FyZGluZy9DdXN0b21zIENsZWFyaW5nBSxTaGlwcGluZy9GcmVpZ2h0IEZvcndhcmRpbmcvQ3VzdG9tcyBDbGVhcmluZ2cQBQlTdGFydC11cHMFCVN0YXJ0LXVwc2cQBRFUZWxlY29tbXVuaWNhdGlvbgURVGVsZWNvbW11bmljYXRpb25nEAUOVHJhbnNwb3J0YXRpb24FDlRyYW5zcG9ydGF0aW9uZxAFBlVuaW9ucwUGVW5pb25zZxAFCVV0aWxpdGllcwUJVXRpbGl0aWVzZxAFEFdhc3RlIE1hbmFnZW1lbnQFEFdhc3RlIE1hbmFnZW1lbnRnEAUYV2hvbGVzYWxlcnMvRGlzdHJpYnV0b3JzBRhXaG9sZXNhbGVycy9EaXN0cmlidXRvcnNnEAUSV2luZXJpZXMvVmluZXlhcmRzBRJXaW5lcmllcy9WaW5leWFyZHNnZGQCBQ8PFgIfBAUkMUJERUZDQUEtMzlERS00OTlDLTgzNzYtQzlBMzhGNzBGODQ3ZGQCDA9kFgYCAQ8PFgIfBAUSTGl0aWdhdGlvbiBTdXBwb3J0ZGQCAw8QDxYCHwVnZA8WEGYCAQICAgMCBAIFAgYCBwIIAgkCCgILAgwCDQIOAg8WEBAFA0FsbAUBIGcQBQ1BdWRpdCBGYWlsdXJlBQ1BdWRpdCBGYWlsdXJlZxAFF0JhbmtydXB0Y3kvUmVjZWl2ZXJzaGlwBRdCYW5rcnVwdGN5L1JlY2VpdmVyc2hpcGcQBRNDYWxjdWxhdGluZyBEYW1hZ2VzBRNDYWxjdWxhdGluZyBEYW1hZ2VzZxAFDUNvbXByZWhlbnNpdmUFDUNvbXByZWhlbnNpdmVnEAUQQ3JpbWluYWwgQWN0aW9ucwUQQ3JpbWluYWwgQWN0aW9uc2cQBRJEaXNwdXRlIFJlc29sdXRpb24FEkRpc3B1dGUgUmVzb2x1dGlvbmcQBQpGYW1pbHkgTGF3BQpGYW1pbHkgTGF3ZxAFHEZvcmVpZ24gQ29ycnVwdCBQcmFjdGljZSBBY3QFHEZvcmVpZ24gQ29ycnVwdCBQcmFjdGljZSBBY3RnEAUkRm9yZWlnbiBDb3JydXB0IFByYWN0aWNlIEFjdCBNb25pdG9yBSRGb3JlaWduIENvcnJ1cHQgUHJhY3RpY2UgQWN0IE1vbml0b3JnEAUTRm9yZW5zaWMgQWNjb3VudGluZwUTRm9yZW5zaWMgQWNjb3VudGluZ2cQBQ9GcmF1ZCBEZXRlY3Rpb24FD0ZyYXVkIERldGVjdGlvbmcQBR1JbnRlbGxlY3R1YWwgUHJvcGVydHkgRGFtYWdlcwUdSW50ZWxsZWN0dWFsIFByb3BlcnR5IERhbWFnZXNnEAUPUGVyc29uYWwgSW5qdXJ5BQ9QZXJzb25hbCBJbmp1cnlnEAUPU0VDIFByb2NlZWRpbmdzBQ9TRUMgUHJvY2VlZGluZ3NnEAUJVGF4IEZyYXVkBQlUYXggRnJhdWRnZGQCBQ8PFgIfBAUkMDZFMDQ3MUMtMEI0NC00OUU1LTg4ODgtQ0M2ODI4M0FCOTk5ZGQCDQ9kFgYCAQ8PFgIfBAUbUGVyc29uYWwgRmluYW5jaWFsIFBsYW5uaW5nZGQCAw8QDxYCHwVnZA8WEGYCAQICAgMCBAIFAgYCBwIIAgkCCgILAgwCDQIOAg8WEBAFA0FsbAUBIGcQBRBBc3NldCBQcm90ZWN0aW9uBRBBc3NldCBQcm90ZWN0aW9uZxAFFUNvbGxlZ2UgRmluYW5jaWFsIEFpZAUVQ29sbGVnZSBGaW5hbmNpYWwgQWlkZxAFDUNvbXByZWhlbnNpdmUFDUNvbXByZWhlbnNpdmVnEAURRWR1Y2F0aW9uIEZ1bmRpbmcFEUVkdWNhdGlvbiBGdW5kaW5nZxAFCkVsZGVyIENhcmUFCkVsZGVyIENhcmVnEAUPRXN0YXRlIFBsYW5uaW5nBQ9Fc3RhdGUgUGxhbm5pbmdnEAUSRmVlIEJhc2VkL0ZlZSBPbmx5BRJGZWUgQmFzZWQvRmVlIE9ubHlnEAUaSGlnaCBOZXQgV29ydGggSW5kaXZpZHVhbHMFGkhpZ2ggTmV0IFdvcnRoIEluZGl2aWR1YWxzZxAFCUluc3VyYW5jZQUJSW5zdXJhbmNlZxAFFUludmVzdG1lbnQgTWFuYWdlbWVudAUVSW52ZXN0bWVudCBNYW5hZ2VtZW50ZxAFF1JlYWwgRXN0YXRlIEludmVzdG1lbnRzBRdSZWFsIEVzdGF0ZSBJbnZlc3RtZW50c2cQBQpSZXRpcmVtZW50BQpSZXRpcmVtZW50ZxAFH1Jpc2sgQXNzZXNzbWVudC9SaXNrIE1hbmFnZW1lbnQFH1Jpc2sgQXNzZXNzbWVudC9SaXNrIE1hbmFnZW1lbnRnEAUNU3RvY2sgT3B0aW9ucwUNU3RvY2sgT3B0aW9uc2cQBRRUcnVzdCBBZG1pbmlzdHJhdGlvbgUUVHJ1c3QgQWRtaW5pc3RyYXRpb25nZGQCBQ8PFgIfBAUkNUMzNEI0NEMtQjA4Mi00RjFCLUEzQjEtRTNDQjBFQzVFQkFDZGQCFQ9kFgICAg9kFgJmDxQrAAIPBcUBQztDOkJyeWNlV2ViR3JvdXAuV2ViLlVJLldlYkNvbnRyb2xzLkR5bmFtaWNDb250cm9sc1BsYWNlaG9sZGVyLCBCcnljZVdlYkdyb3VwLldlYi5VSS5XZWJDb250cm9scy5EeW5hbWljQ29udHJvbHNQbGFjZWhvbGRlciwgVmVyc2lvbj0yLjEuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTMwZDIzZjEwODVkZjNlNzI7b0RDUEgWAGRkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYSBRtjdGwwMCRQYW5lbENvbnRlbnQkYnRuQ2xlYXIFHGN0bDAwJFBhbmVsQ29udGVudCRidG5TZWFyY2gFJmN0bDAwJFBhbmVsQ29udGVudCRycHRNYXN0ZXIkY3RsMDAkbGJDBSZjdGwwMCRQYW5lbENvbnRlbnQkcnB0TWFzdGVyJGN0bDAxJGxiQQUmY3RsMDAkUGFuZWxDb250ZW50JHJwdE1hc3RlciRjdGwwMiRsYkMFJmN0bDAwJFBhbmVsQ29udGVudCRycHRNYXN0ZXIkY3RsMDMkbGJBBSZjdGwwMCRQYW5lbENvbnRlbnQkcnB0TWFzdGVyJGN0bDA0JGxiQwUmY3RsMDAkUGFuZWxDb250ZW50JHJwdE1hc3RlciRjdGwwNSRsYkEFJmN0bDAwJFBhbmVsQ29udGVudCRycHRNYXN0ZXIkY3RsMDYkbGJDBSZjdGwwMCRQYW5lbENvbnRlbnQkcnB0TWFzdGVyJGN0bDA3JGxiQQUmY3RsMDAkUGFuZWxDb250ZW50JHJwdE1hc3RlciRjdGwwOCRsYkMFJmN0bDAwJFBhbmVsQ29udGVudCRycHRNYXN0ZXIkY3RsMDkkbGJBBSZjdGwwMCRQYW5lbENvbnRlbnQkcnB0TWFzdGVyJGN0bDEwJGxiQwUmY3RsMDAkUGFuZWxDb250ZW50JHJwdE1hc3RlciRjdGwxMSRsYkEFJmN0bDAwJFBhbmVsQ29udGVudCRycHRNYXN0ZXIkY3RsMTIkbGJDBSZjdGwwMCRQYW5lbENvbnRlbnQkcnB0TWFzdGVyJGN0bDEzJGxiQQUcY3RsMDAkUGFuZWxDb250ZW50JGJ0bkNsZWFyMgUdY3RsMDAkUGFuZWxDb250ZW50JGJ0blNlYXJjaDJAJ6peN8hhNQ%2BT5GasXMaTJ5XQ1g%3D%3D&__EVENTVALIDATION=%2FwEWjQQC9LWojQ4Co4%2BiwAUChJLJ1AMCjNfc7gcCosrDrwEC4KjJqQoCsLPv0gMCr%2FaljAgC3NiVswYChtiQgwcC1Zei5g4C6p6W1wcCrZH5nggCzrrWoAcCmOyj%2FQIC6rnquAECs%2BD26ggChtiUgAcCztz%2B3QMC0uz7zgMCx7zAuwMCp72igQkCwNfukAsCtvi%2FjA4C8fjqygsCj%2F7Qzg8C9uX7yAMCmsnqxQcCsam%2B2AgC0d7mtQ8C3dSk7A4C466G3A4C5LiNbgKCsLUdAre74fAPArjrgdMMAqiotfwIAuXxlY8CAoiJ2LECAp7%2Fo%2FoBAuSt89UFAoaf7vECAvLQ3r4FAsubso0HAtS3jqYEAomh02cCkdXJ1AUCtuHQhgQCmN%2FDlQ4C%2F9mXzQwChNS76ggC3PGp8QUC2cagtw0CpOSPhw8C9ezUmwwCjayHhwMCjYbNswICxuTQ%2BwoCy5zU9gsChOmdoAoCg7qOowoCh7q2%2BQsCzPCtzgwCj8Dq0gwCmdSTlgUCgYC1yQIChKzzqw8C%2BsmruwQCxcGtuwsC8Mbz5gcCr73LkAECm%2FC3mw4C07CgiAMC0%2FPXvw4C2oHhkgYCgO%2BJiwkC4P3a6wwC7%2B%2FR%2FwYC%2F9jB8QgCmJbuvAMC%2F%2Bvc6QQCwfq%2FqAkC2Jq96Q8C9ZSHMgKalP5jAsvk49kDAsTKlMoBAtvjnN0NArTivKQKAtuZpYkNAoeSl7wIAofh5egBAveJ4p8JAveHuZcOAqq%2B88MIAtfq95sMAtPiyK4KAuf7wMoGArnN084GAvnGpY8IApKziScC0vnbjwYC%2BOqFogUCt4bJqwQC%2F7yu9QsCvc3ttQUCyM%2FI2wgC9LiS8wwChqi8hw8CoKrjrgUC4%2B%2Bq2QgCpM3G3QoC1%2FuHGgKyoqIsAs6h%2Bp0DAorpjZ8OAorpifwMAtf70%2BcHAsyYwZwFAv3ukJUJAqmXiskKAsbqpdMBAu2Y1bgPAtHlt6wBAtars4ACAr2%2F6KEOAoP%2B9uUMArGZmo4GAp2L0rEKAorgkNUIAtW8pt8KAuG31ZEJAp7duGsCyKbtjwwCk%2BvHygEC3%2FaKoQkCwcX36wYCpdKcgQoCzPSa5Q8Cr5zsPgLSyrGNDgKhw8lDAuj949APAsfS92MCm72zoAICh%2Bf4oAUC3v27sw4C6dGLrwQCy%2FLayQoCisaG4QICzI3JiAkC77Oj0AgCuKWPhQUC1szt%2BwkCiZjCzgkClqq3iQMCm9HZ%2FAQC5Nr%2FxAoC0ZbpzgwC14T8AwLVxvvyDQLkqraWCALi3%2BKQBALg7bXXAQLogc%2BNDgLa9dL%2FAQL9meqOCgKruJvyCQKgxKT3BAKKq5XZCgLL%2BaevCgLmvby1AwLF2JuaBQLx99PCDgK99uuCDwKhmv2ZDgKA6bmfDgKLqo%2B6BQLJ%2Br%2FSDwL5lLzMAgKamoaEDgKGg%2BIIAt%2Fe5vAJApXUkocCArz6x9IPAqyann8Cm7Ot%2FAgCpunW0wkCrJWqywoCv5TmgQoCi%2BvI0AoCvJnTzwsCv%2BDa%2FAQCirLqwwsC8PTM6QoCuPi9yAICu4L56QsCvZLs8wgC%2FpiEhAYCypPc9AoClOnVng4CqpSv%2FwcChJHQvQoC7q6logICi9a2jQwC2ODdiAgC5ODRiAgCm4TiyAECzZeqywoCp53YswYCoa%2Fk1QsCpO3E%2FgYC4eyq9AQC5Of97QsCkNiRygwCg%2F6aQgKfyL%2BfDgKawMP3DQKSh%2Bm3DwLop%2FbgBgLYxdPsCQLw0O3NBgK5%2BZCBBQK14qD7AQLe1PbOBQLzqfOrDwLq7pLBBALOzttWArap59kNArOHpfYIAoat7oEKAtWfi78JApzi9KQMAuztiN4KAsGw96AJAr%2Fw%2B5EFApzvt7gNAs62o4cHAvTg9sgMAp7itvIKAv7hn7gEAsrd4bAJAqvUxMQIArSZ2PgEAuC%2Fru8KAufjvecIAvTHlsQLAvyXuakHAoqOgQ4CqbTbiQQCuqPqvQMCqo65lw4C467GtwgChtiYhQcCle%2F4tgUCsanqxQ0C7tSxugUC7%2FzXww0CgrXRpAECkayPqQUClsiogwoCoZzdiAMC186v4wsCmM3X9QECxpy9uAoC3%2FWW%2Bg8C%2F6qTtgUCsqLmLgLOod6dAwLh%2BuDRBwKFvOSfAwKKmeUQAtaLsZcDAonRnbwEAqaNk60HAtWv%2BpEMAtGT3OwCAtP6u%2F0BAoqUlD8CrJX%2BrwUCkMmO7AcC4cyE%2FwIC1YzJlwICnLKvvwgCk6eXmwoCqP6i1ggChtjsggcCmqSi%2BAQCve63%2FAMC7OPE%2BAUCzIDZygQC5ceoPwL42oTwBwLfnZWTCQKutaWQDQLYkse7AQL2nbDjAQKG2OCfBwL2%2F86dCwLCv%2FLcCAK9mOasCgK45PCPDwLd3d6bBAKYgejrDgKBgpzrDALg%2BuODAQK93bLZAgKFyMOkAQLYzZDbDQLnqPHVAwKFx%2FHyCgKViqrRCQKf5aKoDQLxvMI%2FApDzjvcHAs%2FBhcYDAvnyvbQEApy45JwGAvjg0%2FAJAoik69sEAsb8sIgMAtS8nuQBArXYno8PAt%2F%2FqcYKApeF348IAvnD9P4HApvs9foHAs2X1dQEAsmCvdoEAqro04gLAt%2BX0vAEAriMha4KAsOu37YEAsjJ%2BbMFAq666NYLAobY5JwHAq7umoEMAuzc19kDAueo9dYDAq7XuKkJAsa%2B16gKAr7Nm%2FMJAtD%2BmfcNAobY6IEHAsbD%2FbMNAueo%2BcsDAtirj00CkPOG6QcCpM%2Bg8AUCha3W3wsCi8Pb%2BAcC3%2F%2Bh2AoCmbC92AMCs56I%2BgIC4Y%2FDwAsCwajWjAMC9%2BCE7gwCysqa%2FwEChtj8mgcCgI%2BtogECqPH8pQ0C56jt0AMC7bPohAkCt7Pc3AUC2%2Byq4wECooW6jwQCsaixrwMC65KT1QoC1rDxugsC87%2BOsQ8Cttauqg0C7NqXrw8CqPSYogwChtjwmwcC98%2F0kQoCu%2BKfmA8CnpPoowEC9uKStQkCmpT48AcCxanL5AcCkbqcrgUC%2BcW7dwKG2PScBwLcy%2FqLBwKU4OjJDwLnqOXWAwKKz8jgBgLvwrLiBAL%2Fg%2BODCgLh3O%2BzCQKTuvqDCwKU3tSDCALVrYa%2BCAKdgq36AgLG%2FKSLDAKW1dTyCAKiiLfQCwL5irGxDwKHn6iCDwLz5LzvDwKNk4v5AQLXi77DBQKz5Y%2FFCwLLzY%2FtDwK1596jDgLI58euAQL0nMmIDALr2ZCDBwKazpSJCgKoyYWNDALzkoi7AQKmhsmBBgKb4%2FKtCQK04r7qBgKNz9LtCwKoqKv8BwKVxKSCDQLsvvrYCgLVhtGuAwKUxNtvAoqqhaIKArLn8soMAu%2F06ewJAqHg36UMAr3lksYGApm%2BnMEHAuftzPgMAuvZlIAHApW0zYIKAoX3tfMOApCy7%2BkHAse1lqMNApTOhI4DAoSd6N8PAvOdnNoCAqzNj7kJAq63kasCArbszIAKApvjolQC1Lnb%2FAYCr8ic1ggC2o653g8CvL3owg4Cj7T68wkCuZ%2Bxsw4C0v7F5QcCksTPmAoCofHG0AQC%2FdSKiAQCgciMmA8CwqfLmwQCtIK51g4CisqKxwQC%2B8WbugECgMCpwgwCup2wwAUCw8SJrAMCjNee7QwCi6S7%2Fw4CueTLwwcCkcf4TwLmz%2BGCAgKS67KqBwLg9ey7BQKN98fIAwL8mqb%2FCgKww9GVAgKAmacXAuD87QgCy%2BSGpAcCoPqxygUCz6r%2BbAL5vLufCQKQ3obEDgKh%2F%2FTUCwK9%2F%2BnrDQLWnaPoDgLM%2Fsu8CwKp9I3uCAKz8OyjCALTqKK9BAKf39wcAuSguKICAse%2Br6gIAou9xKkHAq6419cEAuenltcMAvaR2ZgPAvrQxY4EArjo1qUGAsS2m7YPAuvZmIUHAo7otKUFAt7O%2BO4JAurlg94PAoqpic8DAp7T1o4LAvSbuYMDAuKM4cgLAvuT2pUEArLog6EIAtWthu4EAqWZxtANAtj0y9wDAv%2FgvsMFAuzM%2Ft8MAtfCjbMFAuvZ7IIHAtHTkHUC5uOBhQMCiqn9yAMC%2Bbv41gUCrPiW3QQCgLL4nAkCzJSbkgECuKyeoAgCkceATQLPhKqXBALf5vinBQL3oMeCCgLZ5tquDgKl5t%2BwAQLyssnCCgKjj7ryAQLhiPnYBZXQmv19LY0pNx69oNwjO%2BjV700L&ctl00%24PanelContent%24tbLastName=&ctl00%24PanelContent%24tbFirstName=&ctl00%24PanelContent%24tbCompany=&ctl00%24PanelContent%24tbCity=&ctl00%24PanelContent%24tbZipCode=&ctl00%24PanelContent%24tbAreaCode=&ctl00%24PanelContent%24rptMaster%24ctl00%24lbC=+&ctl00%24PanelContent%24rptMaster%24ctl01%24lbA=+&ctl00%24PanelContent%24rptMaster%24ctl02%24lbC=+&ctl00%24PanelContent%24rptMaster%24ctl03%24lbA=+&ctl00%24PanelContent%24rptMaster%24ctl04%24lbC=+&ctl00%24PanelContent%24rptMaster%24ctl05%24lbA=+&ctl00%24PanelContent%24rptMaster%24ctl06%24lbC=+&ctl00%24PanelContent%24rptMaster%24ctl07%24lbA=+&ctl00%24PanelContent%24rptMaster%24ctl08%24lbC=+&ctl00%24PanelContent%24rptMaster%24ctl09%24lbA=+&ctl00%24PanelContent%24rptMaster%24ctl10%24lbC=+&ctl00%24PanelContent%24rptMaster%24ctl11%24lbA=+&ctl00%24PanelContent%24rptMaster%24ctl12%24lbC=+&ctl00%24PanelContent%24rptMaster%24ctl13%24lbA=+&ctl00%24PanelContent%24btnSearch2.x=38&ctl00%24PanelContent%24btnSearch2.y=18";
			$this->LoadPostUrl("http://www.calcpa.org/Public/Referral/findcpa.aspx",$data);
			$this->queuedFetch();
			$this->parseData();
		}


		for($i=0;$i<8;$i++)
		{
			$data = "__EVENTTARGET=&__EVENTARGUMENT=&__VIEWSTATE=%2FwEPDwUJNTgxOTE1NTIzD2QWAmYPZBYQAgEPZBYCAgIPZBYCAgIPZBYCZg8UKwACDwXFAUM7QzpCcnljZVdlYkdyb3VwLldlYi5VSS5XZWJDb250cm9scy5EeW5hbWljQ29udHJvbHNQbGFjZWhvbGRlciwgQnJ5Y2VXZWJHcm91cC5XZWIuVUkuV2ViQ29udHJvbHMuRHluYW1pY0NvbnRyb2xzUGxhY2Vob2xkZXIsIFZlcnNpb249Mi4xLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0zMGQyM2YxMDg1ZGYzZTcyO29EQ1BIFgBkZAIDD2QWAgICD2QWAmYPFCsAAg8FxQFDO0M6QnJ5Y2VXZWJHcm91cC5XZWIuVUkuV2ViQ29udHJvbHMuRHluYW1pY0NvbnRyb2xzUGxhY2Vob2xkZXIsIEJyeWNlV2ViR3JvdXAuV2ViLlVJLldlYkNvbnRyb2xzLkR5bmFtaWNDb250cm9sc1BsYWNlaG9sZGVyLCBWZXJzaW9uPTIuMS4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MzBkMjNmMTA4NWRmM2U3MjtvRENQSBYAZBYCZg9kFgICAQ9kFgJmD2QWAmYPFCsAAg8FxQFDO0M6QnJ5Y2VXZWJHcm91cC5XZWIuVUkuV2ViQ29udHJvbHMuRHluYW1pY0NvbnRyb2xzUGxhY2Vob2xkZXIsIEJyeWNlV2ViR3JvdXAuV2ViLlVJLldlYkNvbnRyb2xzLkR5bmFtaWNDb250cm9sc1BsYWNlaG9sZGVyLCBWZXJzaW9uPTIuMS4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MzBkMjNmMTA4NWRmM2U3MjtvRENQSBYAZBYCZg9kFgJmD2QWBGYPZBYEAgMPFgIeCWlubmVyaHRtbGVkAgUPFgIfAAXmBzxzY3JpcHQ%2BDQp2YXIgY3RsMDBfUGFuZWxTZWN0aW9uSGVhZF9vUGFuZWxfMjM5MTZfMzNfMF9jdGwwMF9jb20wX2N0bDAwX2N0bDAwX2NvbTBfb2JqcyA9IG5ldyBBcnJheSgpOw0KDQpjdGwwMF9QYW5lbFNlY3Rpb25IZWFkX29QYW5lbF8yMzkxNl8zM18wX2N0bDAwX2NvbTBfY3RsMDBfY3RsMDBfY29tMF9BZCA9IG5ldyBBZFJvdGF0b3IoImN0bDAwX1BhbmVsU2VjdGlvbkhlYWRfb1BhbmVsXzIzOTE2XzMzXzBfY3RsMDBfY29tMF9jdGwwMF9jdGwwMF9jb20wIiwgY3RsMDBfUGFuZWxTZWN0aW9uSGVhZF9vUGFuZWxfMjM5MTZfMzNfMF9jdGwwMF9jb20wX2N0bDAwX2N0bDAwX2NvbTBfb2Jqcyk7DQpjdGwwMF9QYW5lbFNlY3Rpb25IZWFkX29QYW5lbF8yMzkxNl8zM18wX2N0bDAwX2NvbTBfY3RsMDBfY3RsMDBfY29tMF9BZC5OYXZpZ2F0aW9uID0gZmFsc2U7DQpjdGwwMF9QYW5lbFNlY3Rpb25IZWFkX29QYW5lbF8yMzkxNl8zM18wX2N0bDAwX2NvbTBfY3RsMDBfY3RsMDBfY29tMF9BZC5yYW5kb20gPSBmYWxzZTsNCmN0bDAwX1BhbmVsU2VjdGlvbkhlYWRfb1BhbmVsXzIzOTE2XzMzXzBfY3RsMDBfY29tMF9jdGwwMF9jdGwwMF9jb20wX0FkLnJvdGF0ZSA9IHRydWU7DQpjdGwwMF9QYW5lbFNlY3Rpb25IZWFkX29QYW5lbF8yMzkxNl8zM18wX2N0bDAwX2NvbTBfY3RsMDBfY3RsMDBfY29tMF9BZC50ZXh0UHJldmlvdXMgPSAiPCBwcmV2aW91cyI7DQpjdGwwMF9QYW5lbFNlY3Rpb25IZWFkX29QYW5lbF8yMzkxNl8zM18wX2N0bDAwX2NvbTBfY3RsMDBfY3RsMDBfY29tMF9BZC50ZXh0TmV4dCA9ICJuZXh0ID4iOw0KY3RsMDBfUGFuZWxTZWN0aW9uSGVhZF9vUGFuZWxfMjM5MTZfMzNfMF9jdGwwMF9jb20wX2N0bDAwX2N0bDAwX2NvbTBfQWQuc2hvd0RvdHMgPSBmYWxzZTsNCmN0bDAwX1BhbmVsU2VjdGlvbkhlYWRfb1BhbmVsXzIzOTE2XzMzXzBfY3RsMDBfY29tMF9jdGwwMF9jdGwwMF9jb20wX0FkLmluaXRpYWxpemUoKTsNCjwvc2NyaXB0Pg0KZAICD2QWAgIDDw8WBB4PQ29tbWFuZEFyZ3VtZW50ZB4HVmlzaWJsZWhkZAIHD2QWAgICD2QWAmYPFCsAAg8FxQFDO0M6QnJ5Y2VXZWJHcm91cC5XZWIuVUkuV2ViQ29udHJvbHMuRHluYW1pY0NvbnRyb2xzUGxhY2Vob2xkZXIsIEJyeWNlV2ViR3JvdXAuV2ViLlVJLldlYkNvbnRyb2xzLkR5bmFtaWNDb250cm9sc1BsYWNlaG9sZGVyLCBWZXJzaW9uPTIuMS4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MzBkMjNmMTA4NWRmM2U3MjtvRENQSBYAZBYCZg9kFgICAQ9kFgJmD2QWAmYPFCsAAg8FxQFDO0M6QnJ5Y2VXZWJHcm91cC5XZWIuVUkuV2ViQ29udHJvbHMuRHluYW1pY0NvbnRyb2xzUGxhY2Vob2xkZXIsIEJyeWNlV2ViR3JvdXAuV2ViLlVJLldlYkNvbnRyb2xzLkR5bmFtaWNDb250cm9sc1BsYWNlaG9sZGVyLCBWZXJzaW9uPTIuMS4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49MzBkMjNmMTA4NWRmM2U3MjtvRENQSBYAZGQCDQ9kFgICAg9kFgRmDxYCHwJoZAICDxYEHwAFkQUNCjxkaXYgY2xhc3M9ImFycm93bGlzdG1lbnUiPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgY2xhc3M9InRoaXNQYWdlSWQiIHZhbHVlPSIyMzkxNiIgLz48aW5wdXQgdHlwZT0iaGlkZGVuIiBjbGFzcz0idGhpc1BhdGhJZCIgdmFsdWU9IjsyMzkxNjsiIC8%2BDQo8L2Rpdj4NCg0KPHNjcmlwdD4NCiAgICANCi8vOzIzOTE2Ow0KZGRhY2NvcmRpb24uaW5pdCh7DQoJaGVhZGVyY2xhc3M6ICJleHBhbmRhYmxlIiwNCgljb250ZW50Y2xhc3M6ICJjYXRlZ29yeWl0ZW1zIiwNCglyZXZlYWx0eXBlOiAibW91c2VvdmVyIiwNCgltb3VzZW92ZXJkZWxheTogNTAwLA0KCWNvbGxhcHNlcHJldjogdHJ1ZSwNCglkZWZhdWx0ZXhwYW5kZWQ6IFstMV0sDQoJb25lbXVzdG9wZW46IGZhbHNlLA0KCWFuaW1hdGVkZWZhdWx0OiBmYWxzZSwNCglwZXJzaXN0c3RhdGU6IGZhbHNlLA0KCXRvZ2dsZWNsYXNzOiBbIiIsICJvcGVuaGVhZGVyIl0sDQoJdG9nZ2xlaHRtbDogWyJwcmVmaXgiLCAiIiwgIiJdLA0KCWFuaW1hdGVzcGVlZDogImZhc3QiLA0KCW9uaW5pdDpmdW5jdGlvbihoZWFkZXJzLCBleHBhbmRlZGluZGljZXMpeyB9LA0KCW9ub3BlbmNsb3NlOmZ1bmN0aW9uKGhlYWRlciwgaW5kZXgsIHN0YXRlLCBpc3VzZXJhY3RpdmF0ZWQpeyB9DQp9KTsNCg0KPC9zY3JpcHQ%&__EVENTVALIDATION=%2FwEWOAL4%2BMTrAwKQ3pCAAwLqgqz9AQL6oLa5DgKnzKyVCwLWnpjTDAK%2BmbqlDwK58bmlDwLA57mlDwKzvbqlDwKytbqlDwK9kbqlDwK0g7qlDwK33bqlDwK21bqlDwK%2F39WpDwK%2BmdapDwK58dWpDwLA59WpDwKzvdapDwKytdapDwK9kdapDwK0g9apDwK33dapDwK21dapDwK%2F35FDAr6ZkkMCufGRQwLA55FDArO9kkMCsrWSQwK9kZJDArSDkkMCt92SQwK21ZJDAr%2FfzcgMAr6ZzsgMArnxzcgMAsDnzcgMArO9zsgMArK1zsgMAr2RzsgMArSDzsgMArfdzsgMArbVzsgMAr%2Ff6ZABAr6Z6pABArnx6ZABAsDn6ZABArO96pABArK16pABAr2R6pABArSD6pABArfd6pABArbV6pABAr%2FfxccMDQUIgYGKgozf4e1qZmJC9sVjjr0%3D&ctl00%24PanelContent%24imgNext.x=16&ctl00%24PanelContent%24imgNext.y=13";
			$this->LoadPostUrl("http://www.calcpa.org/Public/Referral/FindCPAList.aspx",$data);
			$this->queuedFetch();
			$this->parseData();
		}


	}
/*
	static $hostCount=array();
	static function loadCallBack($url,$html,$arg3)
	{
		if (empty($url)) //timeout?
			return;

		$thiz = self::getInstance();
		if (strpos($html,"The Three Laws of Robotics are as follows:"))
		{
			$host = parse_url($url,PHP_URL_HOST);
			log::info("ERROR! ERROR! FORBIDDEN ACCESS!");
					
			$html=null;
		}

		if (strlen($html)<5000)
		{$html=null;}
		baseScrape::loadCallBack($url,$html,$arg3);
	}*/




	public static function parse($url,$html)
	{
		$type = get_class();		
		$thiz = self::getInstance();

		$ap = new Address_Parser();
		$pp = new phone_parser();
		$ep = new Email_Parser();
		$kvp = new KeyValue_Parser();	
		$urls = array();
		log::info($url);
		//parse_str(parse_url($url,PHP_URL_QUERY),$query); 

	//	file_put_contents("$type.html",$html);	

		$links = array();
		$data = array();
		if (preg_match("#FindCPAList.aspx#",$url))
		{

			$x =  new  XPath($html);	
			foreach($x->query("//a[contains(@href, 'FindCPADetails')]") as $node)
			{
				  $links[] = self::relative2absolute($url, $node->getAttribute("href"));
			}
			if (!empty($links))
				$thiz->loadUrlsByArray($links);
		}
		else
		{
			$x =  new  XPath($html);	
			$keys = array();
			$values = array();
			$data = array();
			
			foreach($x->query("//*[contains(@id,'FirmName')]") as $node)
			{
				$data['COMPANY'] =  self::cleanup($node->textContent);
			}

			foreach($x->query("//tr[contains(@id,'firmProfile')]//td[@class = 'ProfileDetailLabel']") as $node)
			{
				$keys[] = self::cleanup($node->textContent);
			}

			foreach($x->query("//tr[contains(@id,'firmProfile')]//td[@class = 'ProfileDetail']") as $node)
			{
				$values[] =  self::cleanup($node->textContent);
			}

			$key = "ADDRESS";

			for($i=0;$i< sizeof($values) ; $i++ )
			{
				if (!empty($keys[$i]))
					$key = $keys[$i];


				if (empty($data[$key]))
					$data[$key] = $values[$i];
				else
				{
					// if it is an email treat special
					if (preg_match("#.+\@.+\..+#", $values[$i]))
						@$data["EMAIL"] .= $values[$i]." ";
					else
						$data[$key] = "{$data[$key]}, {$values[$i]}";
				}


			}
			
			$data['COUNTRY'] = 'United States';

			$data['SOURCE_URL'] = $url;
			log::info(db::normalize($data));
			db::store($type,$data,array('SOURCE_URL'));			
		}
	}
}


$r= new calcpa();
$r->parseCommandLine();

